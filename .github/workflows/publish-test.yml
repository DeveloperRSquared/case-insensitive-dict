name: Publish to TestPyPI

on:
  push:
    paths:
      # NOTE: this is a proxy for a version update
      - 'pyproject.toml'
      - '!docs/**'
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  deploy_pypi:
    name: Deploy TestPyPI

    runs-on: ubuntu-latest

    environment:
      name: TestPyPI
      url: https://test.pypi.org/project/case-insensitive-dictionary/

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Set up python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Get full Python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Install poetry 1.1.12
        uses: snok/install-poetry@v1
        with:
          version: 1.1.12

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        run: poetry install

      - name: Run tests (pytest)
        run: poetry run python -m pytest -c $(pwd)/pyproject.toml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build project for distribution
        run: poetry build

      - name: Publish to Test PyPI
        env:
          POETRY_REPOSITORIES_TESTPYPI_URL: https://test.pypi.org/legacy/
          POETRY_HTTP_BASIC_TESTPYPI_USERNAME: __token__
          POETRY_HTTP_BASIC_TESTPYPI_PASSWORD: ${{ secrets.TESTPYPI_TOKEN }}
        run: poetry publish --repository testpypi
